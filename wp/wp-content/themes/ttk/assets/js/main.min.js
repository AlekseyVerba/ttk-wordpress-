"use strict";objectFitImages();var element,oneCap,twoCap,swiper=new Swiper(".banner .swiper-container",{spaceBetween:30,loop:!0,pagination:{el:".banner .swiper-pagination",clickable:!0}});function checkInput(e){var n=!0;return e[0].querySelectorAll("input").forEach(function(e){!function(e){e.classList.contains("badForm")&&e.classList.remove("badForm");e.classList.contains("goodForm")&&e.classList.remove("goodForm");e.closest("[data-modal-Inputwrap]")&&e.closest("[data-modal-Inputwrap]").querySelector(".mistake")&&e.closest("[data-modal-Inputwrap]").querySelector(".mistake").remove()}(e);var t=e.value;switch(e.getAttribute("name")){case"name":t.length<2||""===t.trim()||/^[1-9]+$/.test(t)?(n=!1,a(e,"Введите правильное имя")):r(e);break;case"mail":""!=t.trim()&&!1===/^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/.test(t)?(n=!1,a(e,"Введите правильную электронную почту")):r(e);break;case"phone":t.length<11||""===t.trim()||/^[a-zA-z]+$/.test(t)?(n=!1,a(e,"Некорректный номер телефона")):r(e);break;case"adress":t.length<15||""===t.trim?(n=!1,a(e,"Введите корректный адресс")):r(e);break;case"number-dog":16<t.length||""===t.trim?(n=!1,a(e,"Введите корректный номер договора")):r(e);break;case"checkbox":e.checked||(n=!1,a(e,"Необходимо подтверждение"))}}),n;function a(e,t){var n=document.createElement("div");n.classList.add("mistake"),n.textContent="".concat(t),e.closest("[data-modal-Inputwrap]").insertAdjacentElement("afterBegin",n),e.classList.add("badForm")}function r(e){e.classList.add("goodForm")}}window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=function(e,t){t=t||window;for(var n=0;n<this.length;n++)e.call(t,this[n],n,this)}),function(e){e.matches=e.matches||e.mozMatchesSelector||e.msMatchesSelector||e.oMatchesSelector||e.webkitMatchesSelector,e.closest=e.closest||function(e){return this?this.matches(e)?this:this.parentElement?this.parentElement.closest(e):null:null}}(Element.prototype),function(){var e=[window.Element,window.CharacterData,window.DocumentType],t=[];e.forEach(function(e){e&&t.push(e.prototype)}),t.forEach(function(e){e.hasOwnProperty("remove")||Object.defineProperty(e,"remove",{configurable:!0,enumerable:!0,writable:!0,value:function(){this.parentNode.removeChild(this)}})})}(),document.querySelectorAll("[data-question]").forEach(function(n){n.addEventListener("click",function(e){var t=e.target.closest(".questions__item").querySelector(".question__answer");t.classList.contains("question__answer--active")?(t.classList.remove("question__answer--active"),n.querySelector("[data-question-img]").style.opacity="1",n.querySelector("[data-question-img]").style.transform="rotate(0)",n.querySelector("[data-question-title]").classList.remove("questions__title--active"),$(t).hide(500)):(document.querySelectorAll(".question__answer--active").forEach(function(e){var t=e.closest(".questions__item").querySelector("[data-question-img]");console.log(t),t.style.opacity="1",t.style.transform="rotate(0)",console.log(e),e.classList.remove("question__answer--active"),$(e).hide(500)}),t.classList.add("question__answer--active"),$(t).show(500),n.querySelector("[data-question-img]").style.opacity="0.6",n.querySelector("[data-question-img]").style.transform="rotate(180deg)",n.querySelector("[data-question-title]").classList.add("questions__title--active"))})}),document.querySelectorAll(".wp-caption").forEach(function(e){var t,n,a;e.querySelector(".wp-caption-text")&&((n=(t=e.querySelector(".wp-caption-text")).textContent.length)<15?t.style.maxWidth="20%":15<=n&&n<=30?t.style.maxWidth="27%":31<=n&&n<=50?t.style.maxWidth="50%":51<=n&&n<=80?t.style.maxWidth="70%":81<=n&&(t.style.maxWidth="100%"),e.querySelector(".wp-caption-text").remove(),(a=document.createElement("div")).classList.add("wp-caption-text__wrapper"),a.append(t),e.append(a))}),document.querySelectorAll("header .header-down__wrapper").forEach(function(n){n.addEventListener("click",function(e){var t;document.querySelectorAll(".header-down__wrapper").forEach(function(e){e.querySelector("a").classList.remove("header-down-actiove-mobile")}),window.outerWidth<=976&&((t=n.querySelector("ul")).classList.contains("header-down__list-mobile")||t.classList.add("header-down__list-mobile"),t.classList.contains("header-down__list-block")&&(t.classList.remove("header-down__list-fadeIn"),t.classList.add("header-down__list-fadeOut"),setTimeout(function(){t.classList.remove("header-down__list-block")},300)),t.classList.contains("header-down__list-block")||(n.querySelector("a").classList.add("header-down-actiove-mobile"),document.querySelector(".header-down__list-block")&&document.querySelector(".header-down__list-block").classList.remove("header-down__list-block"),t.classList.add("header-down__list-block"),t.classList.remove("header-down__list-fadeOut"),setTimeout(function(){t.classList.add("header-down__list-fadeIn")},20)))})}),document.addEventListener("DOMContentLoaded",function(){document.querySelector(".search.current-item")&&(document.querySelector(".search.current-item").textContent="Поиск"),(-1<window.navigator.userAgent.indexOf("MSIE ")||-1<window.navigator.userAgent.indexOf("Trident/"))&&(document.querySelector(".svg-main").style.display="none")}),document.addEventListener("DOMContentLoaded",function(){var e,n;e="data-checkRate",n="rate__content-items--active",document.querySelectorAll("[".concat(e,"]")).forEach(function(e){var t=e.parentElement.nextElementSibling;e.checked?t.classList.add(n):t.classList.contains(n)&&t.classList.remove(n),e.addEventListener("change",function(e){e.target.checked?t.classList.add(n):t.classList.contains(n)&&t.classList.remove(n)})})}),document.addEventListener("DOMContentLoaded",function(){var L=[];document.querySelectorAll(".rate__content-card-add").forEach(function(e){e.addEventListener("click",function(){t(e)})});var q=[],E=[],S=[],A=[],k=[],x=[];function t(i){var e,t,n,a,r,o=[],c=i.closest(".rate__content-card--constructor");switch(i.classList.contains("rate__content-card-add")||(i=i.querySelector(".rate__content-card-add")),document.querySelector(".result__right-list .result__right-item--now")&&document.querySelector(".result__right-list .result__right-item--now").remove(),i.classList.contains("rate__content-card-add--active")?(i.classList.contains("rate__content-card-add")&&(t=(e=i.closest(".rate__content-items.rate__content-items--constructor ")).querySelectorAll(".rate__content-card.rate__content-card--constructor"),"Тематическое телевиденье"!==e.closest(".rate__content-wrapper").querySelector(".checkbox__text").textContent&&t.forEach(function(e){e!==c&&(e.classList.add("rate__content-card--constructor-no-active"),e.querySelector("button").setAttribute("disabled",!0))}),i.querySelector(".rate__content-plus").style.display="none",i.querySelector(".rate__content-galka").style.display="block"),L.push(i),i.classList.remove("rate__content-card-add--active")):(i.classList.contains("rate__content-card-add")&&(a=(n=i.closest(".rate__content-items.rate__content-items--constructor ")).querySelectorAll(".rate__content-card.rate__content-card--constructor"),"Тематическое телевиденье"!==n.closest(".rate__content-wrapper").querySelector(".checkbox__text").textContent&&a.forEach(function(e){e!==c&&(e.classList.remove("rate__content-card--constructor-no-active"),e.querySelector("button").removeAttribute("disabled"))}),i.querySelector(".rate__content-plus").style.display="block",i.querySelector(".rate__content-galka").style.display="none"),L=L.filter(function(e){return e!==i}),i.classList.add("rate__content-card-add--active")),+i.closest(".rate__content ").getAttribute("data-maincontent")){case 0:r="Для квартир";break;case 1:r="Для частных домов";break;case 2:r="Для бизнеса и организаций"}var s,l,d,u,m,_,p=i.closest(".rate__content-card").getAttribute("data-card-constructor-name"),h=i.closest(".rate__content-card").getAttribute("data-card-constructor-price");"Для квартир"==r?(s=[],l=[],q.forEach(function(e){e[0]!==p&&e[1]!==h&&s.push(e)}),E.forEach(function(e){e!==p&&l.push(e)}),q=s,E=l):"Для частных домов"==r?(d=[],u=[],S.forEach(function(e){e[0]!==p&&e[1]!==h&&d.push(e)}),A.forEach(function(e){e!==p&&u.push(e)}),S=d,A=u):"Для бизнеса и организаций"==r&&(m=[],_=[],k.forEach(function(e){e[0]!==p&&e[1]!==h&&m.push(e)}),x.forEach(function(e){e!==p&&_.push(e)}),k=m,x=_);(i.classList.contains("rate__content-card-add")?i.closest("[data-card-constructor]"):i).getAttribute("data-card-constructor-pay");L.forEach(function(e){var t,n;switch(+e.closest(".rate__content").getAttribute("data-maincontent")){case 0:n="Для квартир";break;case 1:n="Для частных домов";break;case 2:n="Для бизнеса и организаций"}10<(t=e.classList.contains("rate__content-card-add")?e.closest("[data-card-constructor]"):e).getAttribute("data-card-constructor-price").length&&t.setAttribute("data-card-constructor-price",0),null===t.getAttribute("data-card-constructor-price")&&t.setAttribute("data-card-constructor-price","month");var a=t.getAttribute("data-card-constructor-name"),r=t.getAttribute("data-card-constructor-price"),c=t.getAttribute("data-card-constructor-pay");function o(e,t,n,a,r){"month"===e?-1==n.indexOf(r)&&(n.push(r),t.push([r,a,e])):"now"===e&&-1==selectProd.indexOf(r)&&(selectProd.push(r),arrNow.push(a),t.push([r,a]))}var s=document.querySelector(".rate__catalog-link--active").textContent;"Для квартир"!=s||s!=n||i.classList.contains("rate__content-card-add--active")?"Для частных домов"!=s||s!=n||i.classList.contains("rate__content-card-add--active")?"Для бизнеса и организаций"!=s||s!=n||i.classList.contains("rate__content-card-add--active")||o(c,k,x,r,a):o(c,S,A,r,a):o(c,q,E,r,a)});var f,v,g=document.querySelector(".rate__catalog-link--active"),y=0;"Для квартир"==g.textContent?q.forEach(function(e){y+=+e[1]}):"Для частных домов"==g.textContent?S.forEach(function(e){y+=+e[1]}):"Для бизнеса и организаций"==g.textContent&&k.forEach(function(e){y+=+e[1]}),document.querySelector(".result__right-item-price--month").textContent="".concat(y," ₽"),1<=o.length&&(document.createElement("ul").classList.add("result__right-item"),f=0,"Для квартир"==g.textContent?priceObj.blago.priceNew.forEach(function(e){f+=+e}):"Для частных домов"==g.textContent?priceObj.private.priceNew.forEach(function(e){f+=+e}):"Для бизнеса и организаций"==g.textContent&&priceObj.legal.priceNew.forEach(function(e){f+=+e}),v=window.innerWidth<=375?"Одноразовая оплата:":"Единоразовая оплата:",document.querySelector(".result__right-item--month").insertAdjacentHTML("beforeBegin","\n        <li class='result__right-item result__right-item--now'>\n            <span class=\"result__right-item-name\">".concat(v,'</span>\n            <span class="result__right-item-price">').concat(f," ₽</span>\n        </li>\n    ")));var w=[];"Для квартир"==g.textContent?q.forEach(function(e){var t='\n                    <li class="result__left-item">\n                        <span class="result__left-item-name">'.concat(e[0],'</span>\n                        <span class="result__left-item-price">').concat(e[1]," ₽</span>\n                   </li>\n            ");w.push(t)}):"Для частных домов"==g.textContent?S.forEach(function(e){var t='\n                    <li class="result__left-item">\n                        <span class="result__left-item-name">'.concat(e[0],'</span>\n                        <span class="result__left-item-price">').concat(e[1]," ₽</span>\n                   </li>\n            ");w.push(t)}):"Для бизнеса и организаций"==g.textContent&&k.forEach(function(e){var t='\n                    <li class="result__left-item">\n                        <span class="result__left-item-name">'.concat(e[0],'</span>\n                        <span class="result__left-item-price">').concat(e[1]," ₽</span>\n                   </li>\n            ");w.push(t)});var b=document.querySelector(".result__left-list");b.innerHTML="",w.forEach(function(e){b.innerHTML+=e}),document.querySelectorAll(".rate__catalog-link").forEach(function(c){c.addEventListener("click",function(){var t,e,n=0;"Для квартир"==c.textContent?q.forEach(function(e){n+=+e[1]}):"Для частных домов"==c.textContent?S.forEach(function(e){n+=+e[1]}):"Для бизнеса и организаций"==c.textContent&&k.forEach(function(e){n+=+e[1]}),document.querySelector(".result__right-item-price--month").textContent="".concat(n," ₽"),1<=o.length&&(document.createElement("ul").classList.add("result__right-item"),t=0,"Для квартир"==c.textContent?priceObj.blago.priceNew.forEach(function(e){t+=+e}):"Для частных домов"==c.textContent?priceObj.private.priceNew.forEach(function(e){t+=+e}):"Для бизнеса и организаций"==c.textContent&&priceObj.legal.priceNew.forEach(function(e){t+=+e}),e=window.innerWidth<=375?"Одноразовая оплата:":"Единоразовая оплата:",document.querySelector(".result__right-item--month").insertAdjacentHTML("beforeBegin","\n                <li class='result__right-item result__right-item--now'>\n                    <span class=\"result__right-item-name\">".concat(e,'</span>\n                    <span class="result__right-item-price">').concat(t," ₽</span>\n                </li>\n            ")));var a=[];"Для квартир"==c.textContent?q.forEach(function(e){var t='\n                    <li class="result__left-item">\n                        <span class="result__left-item-name">'.concat(e[0],'</span>\n                        <span class="result__left-item-price">').concat(e[1]," ₽</span>\n                   </li>\n            ");a.push(t)}):"Для частных домов"==c.textContent?S.forEach(function(e){var t='\n                    <li class="result__left-item">\n                        <span class="result__left-item-name">'.concat(e[0],'</span>\n                        <span class="result__left-item-price">').concat(e[1]," ₽</span>\n                   </li>\n            ");a.push(t)}):"Для бизнеса и организаций"==c.textContent&&k.forEach(function(e){var t='\n                    <li class="result__left-item">\n                        <span class="result__left-item-name">'.concat(e[0],'</span>\n                        <span class="result__left-item-price">').concat(e[1]," ₽</span>\n                   </li>\n            ");a.push(t)});var r=document.querySelector(".result__left-list");r.innerHTML="",a.forEach(function(e){r.innerHTML+=e})})})}document.querySelector("[data-selected]")&&t(document.querySelector("[data-selected]")),document.querySelectorAll("[data-checkrate]").forEach(function(l){l.addEventListener("change",function(){if(!l.checked){var i,n,a,t,e,r,c,o,s;switch(document.querySelector(".result__right-list .result__right-item--now")&&document.querySelector(".result__right-list .result__right-item--now").remove(),+l.closest(".rate__content").getAttribute("data-maincontent")){case 0:i="Для квартир";break;case 1:i="Для частных домов";break;case 2:i="Для бизнеса и организаций"}l.closest(".rate__content-wrapper").querySelectorAll(".rate__content-card--constructor").forEach(function(e){var t,n,a,r,c,o,s=e.getAttribute("data-card-constructor-name");e.getAttribute("data-card-constructor-price");"Для квартир"==i?(t=[],n=[],q.forEach(function(e){e[0]!==s&&t.push(e)}),E.forEach(function(e){e!==s&&n.push(e)}),E=n,q=t):"Для частных домов"==i?(a=[],r=[],S.forEach(function(e){e[0]!==s&&a.push(e)}),A.forEach(function(e){e!==s&&r.push(e)}),A=r,S=a):"Для бизнеса и организаций"==i&&(c=[],o=[],k.forEach(function(e){e[0]!==s&&c.push(e)}),x.forEach(function(e){e!==s&&o.push(e)}),x=o,k=c)}),1<=L.length&&(n=0,a=l.parentElement.parentElement.getAttribute("class"),L.forEach(function(e,t){0===t&&n++,e.closest(".".concat(a)).querySelector("[type='checkbox']")===l&&1===n&&(l.parentElement.parentElement.querySelectorAll(".rate__content-plus").forEach(function(e){e.style.display="block"}),l.parentElement.parentElement.querySelectorAll(".rate__content-galka").forEach(function(e){e.style.display="none"}),l.parentElement.parentElement.querySelectorAll(".rate__content-card-add").forEach(function(e){e.classList.add("rate__content-card-add--active")}),l.parentElement.parentElement.querySelectorAll(".rate__content-card--constructor-no-active").forEach(function(e){e.classList.remove("rate__content-card--constructor-no-active")}),l.parentElement.parentElement.querySelectorAll("button").forEach(function(e){e.removeAttribute("disabled",!1)}),n++)}),(L=L.filter(function(e){return e.closest(".".concat(a)).querySelector("[type='checkbox']")!==l})).forEach(function(e){var t=e.closest("[data-card-constructor]");10<t.getAttribute("data-card-constructor-price").length&&t.setAttribute("data-card-constructor-price",0),null===t.getAttribute("data-card-constructor-price")&&t.setAttribute("data-card-constructor-price","month");var n=t.getAttribute("data-card-constructor-name"),a=t.getAttribute("data-card-constructor-price"),r=t.getAttribute("data-card-constructor-pay");function c(e,t,n,a,r,c,o){var s,i=c.closest(".rate__content").getAttribute("data-maincontent");0==i?s="Для квартир":1==i?s="Для частных домов":2==i&&(s="Для бизнеса и организаций"),"month"===e?-1==n.indexOf(r)&&s==o&&(n.push(r),t.push([r,a,e])):"now"===e&&-1==selectProd.indexOf(r)&&s==o&&t.push([r,a,e])}var o=document.querySelector(".rate__catalog-link--active").textContent;"Для квартир"!=o||o!=i||e.classList.contains("rate__content-card-add--active")?"Для частных домов"!=o||o!=i||e.classList.contains("rate__content-card-add--active")?"Для бизнеса и организаций"!=o||o!=i||e.classList.contains("rate__content-card-add--active")||c(r,k,x,a,n,t,"Для бизнеса и организаций"):c(r,S,A,a,n,t,"Для частных домов"):c(r,q,E,a,n,t,"Для квартир")}),t=0,"Для квартир"==i?q.forEach(function(e){t+=+e[1]}):"Для частных домов"==i&&S.forEach(function(e){t+=+e[1]}),"Для бизнеса и организаций"==i&&k.forEach(function(e){t+=+e[1]}),document.querySelector(".result__right-item-price--month").textContent="".concat(t," ₽"),e=document.querySelector(".rate__catalog-link--active"),r=0,"Для квартир"==e.textContent&&q.forEach(function(e){"now"==l[2]&&(r+=+e)}),document.createElement("ul").classList.add("result__right-item"),c=window.innerWidth<=375?"Одноразовая оплата:":"Единоразовая оплата:",document.querySelector(".result__right-item--month").insertAdjacentHTML("beforeBegin","\n                     <li class='result__right-item result__right-item--now'>\n                         <span class=\"result__right-item-name\">".concat(c,'</span>\n                         <span class="result__right-item-price">').concat(r," ₽</span>\n                     </li>\n                 ")),o=[],"Для квартир"==e.textContent?q.forEach(function(e){var t='\n                                 <li class="result__left-item">\n                                     <span class="result__left-item-name">'.concat(e[0],'</span>\n                                     <span class="result__left-item-price">').concat(e[1]," ₽</span>\n                                </li>\n                         ");o.push(t)}):"Для частных домов"==e.textContent?S.forEach(function(e){var t='\n                                 <li class="result__left-item">\n                                     <span class="result__left-item-name">'.concat(e[0],'</span>\n                                     <span class="result__left-item-price">').concat(e[1]," ₽</span>\n                                </li>\n                         ");o.push(t)}):"Для бизнеса и организаций"==e.textContent&&k.forEach(function(e){var t='\n                                 <li class="result__left-item">\n                                     <span class="result__left-item-name">'.concat(e[0],'</span>\n                                     <span class="result__left-item-price">').concat(e[1]," ₽</span>\n                                </li>\n                         ");o.push(t)}),(s=document.querySelector(".result__left-list")).innerHTML="",o.forEach(function(e){s.innerHTML+=e}))}})})}),$("input[name='phone']").mask("+7 (999) 99-99-999",{autoclear:!1}),document.querySelectorAll("input[name='phone']").forEach(function(t){t.addEventListener("input",function(e){8==t.value[4]&&(t.value=t.value.slice(0,4))})}),window.addEventListener("DOMContentLoaded",function(){$(".gallery").each(function(e,t){var n=$(this).find(".g-slider--top"),a=$(this).find(".g-slider--thumbs"),r=$(this).find(".g-slider__btn--prev"),c=$(this).find(".g-slider__btn--next"),o=new Swiper(a,{spaceBetween:15,slidesPerView:4,freeMode:!0,loop:!0,watchSlidesVisibility:!0,watchSlidesProgress:!0,breakpoints:{639:{spaceBetween:12}}});new Swiper(n,{loop:!0,navigation:{nextEl:c,prevEl:r},thumbs:{swiper:o}})})});try{document.querySelector("#hamburger-icon").addEventListener("click",function(e){var t=e.target.closest("#hamburger-icon");t.classList.toggle("active"),t.classList.contains("active")?document.querySelector(".header-down nav").classList.add("header__nav-active"):document.querySelector(".header-down nav").classList.remove("header__nav-active")})}catch(e){}!function(){for(var e=document.querySelectorAll(".youtube"),t=0;t<e.length;t++){$(t).attr;var n="https://img.youtube.com/vi/"+e[t].dataset.embed+"/sddefault.jpg",a=new Image;a.src=n,a.addEventListener("load",void e[t].appendChild(a)),e[t].addEventListener("click",function(){var e=document.createElement("iframe");e.setAttribute("frameborder","0"),e.setAttribute("allowfullscreen",""),e.setAttribute("src","https://www.youtube.com/embed/"+this.dataset.embed+"?showinfo=1&autoplay=1&rel=0"),this.innerHTML="",this.appendChild(e)})}}(),document.addEventListener("DOMContentLoaded",function(){document.querySelectorAll("iframe").forEach(function(e){e.hasAttribute("frameborder")&&(e.removeAttribute("frameborder"),e.style.border="0px")})});try{document.querySelector("[data-input-loup]").addEventListener("mouseenter",function(e){e.target.closest(".header-up__img").querySelector(".header-up__form-input").classList.add("header-up__form-input--active")}),document.querySelector("[data-input-loup]").addEventListener("mouseleave",function(e){setTimeout(function(){document.querySelector(".header-up__form-input").classList.remove("header-up__form-input--active")},500)})}catch(e){}document.addEventListener("DOMContentLoaded",function(){document.querySelectorAll(".header-down__wrapper .menu__submenu").forEach(function(e){var t=e.closest(".header-down__wrapper").querySelector(".header-down__link");t.classList.add("no-click"),t.addEventListener("click",function(e){e.preventDefault()})})});try{var openModal=function(e,t){var n=document.querySelectorAll(e),u=document.querySelector(t);n.forEach(function(d){d.addEventListener("click",function(){var e,t,n,a,r,c,o,s,i,l,m;u.classList.add("modal-active"),document.querySelector("body").style.overflow="hidden",null!==d.getAttribute("data-request")&&((e=document.createElement("input")).setAttribute("type","hidden"),d.closest(".rate__content-card")&&(n=(t=d.closest(".rate__content-card")).querySelector(".rate__content-card-header").textContent.trim(),a=u.querySelector(".modal__info-block"),!d.closest(".rate__content-item")||(r=d.closest(".rate__content-item")).querySelector("span.rate__checkbox")&&(c=r.querySelector("span.rate__checkbox").textContent.trim(),(o=document.createElement("input")).setAttribute("type","hidden"),o.value=c,o.name="service",o.classList.add("delete"),a.append(o)),document.querySelector(".rate__catalog-link--active")&&(s=document.querySelector(".rate__catalog-link--active").textContent.trim(),(i=document.createElement("input")).setAttribute("type","hidden"),i.value=s,i.name="category",i.classList.add("delete"),a.append(i)),e.value=n,e.name="nameCard",e.classList.add("delete"),a.append(e),(l=document.createElement("input")).setAttribute("type","hidden"),l.name="priceCard",l.classList.add("delete"),t.querySelector(".rate__content-card-price")?l.value=t.querySelector(".rate__content-card-price").textContent.trim():l.value=0,a.append(l))),d.closest(".result")&&(m=u.querySelector(".modal__info-block"),document.querySelector(".rate__content--active").querySelectorAll(".rate__content-galka").forEach(function(e){var t,n,a,r,c,o,s,i,l,d,u;"block"==window.getComputedStyle(e).display&&(n=(t=e.closest(".rate__content-card")).querySelector(".rate__content-card-header").textContent.trim(),a="",a=t.querySelector(".rate__content-card-price")?t.querySelector(".rate__content-card-price").textContent.trim():"0 ₽",c=(r=t.closest(".rate__content-wrapper")).querySelector("div.checkbox__text").textContent.trim(),o=r.closest(".rate__content").getAttribute("data-maincontent"),s=document.querySelector('[data-maintab="'.concat(o,'"]')).textContent.trim(),i=document.createElement("input"),l=document.createElement("input"),d=document.createElement("input"),u=document.createElement("input"),i.setAttribute("type","hidden"),i.value=n,i.name="nameCard",i.classList.add("delete"),l.setAttribute("type","hidden"),l.value=c,l.name="service",l.classList.add("delete"),d.setAttribute("type","hidden"),d.value=s,d.name="category",d.classList.add("delete"),u.setAttribute("type","hidden"),u.value=a,u.name="priceCard",u.classList.add("delete"),m.append(d),m.append(l),m.append(i),m.append(u))}))})}),u.addEventListener("mousedown",function(e){(e.target.classList.contains("modal-active")||e.target.classList.contains("modal__close"))&&(u.classList.remove("modal-active"),document.querySelector("body").style.overflow="",u.querySelector(".delete")&&u.querySelectorAll(".delete").forEach(function(e){e.remove()}))})};try{openModal("[data-application]","[data-modal]")}catch(e){}try{openModal("[data-request]","[data-modal-request]")}catch(e){}try{openModal("[data-addQuestion]","[data-modal-question]")}catch(e){}}catch(e){}try{var soundVolume=!0;document.querySelectorAll("[data-radioBtn]").forEach(function(t){t.addEventListener("click",function(e){t.classList.contains("radio__pause")?(soundVolume&&(document.getElementById("radio_player").volume=.5,soundVolume=!1),t.classList.remove("radio-btn--active"),document.querySelector(".radio__play").classList.add("radio-btn--active"),console.log(document.getElementById("radio_player")),document.getElementById("radio_player").play()):(t.classList.remove("radio-btn--active"),document.querySelector(".radio__pause").classList.add("radio-btn--active"),document.getElementById("radio_player").pause())})});var sound=document.querySelector("[data-sound]");sound.addEventListener("click",function(){var e=sound.closest(".radio__menu"),t=sound.closest(".sound"),n=t.querySelector(".sound__wrapper"),a=t.querySelector(".radio__sound-regular"),r=document.querySelector(".radio__range");t.classList.contains("sound--active")?(t.classList.remove("sound--active"),a.classList.remove("radio__sound-regular--active"),n.classList.remove("sound__wrapper--active"),1236<=window.innerWidth&&(r.style.width="66%"),e.style.width="7%"):(t.classList.add("sound--active"),a.classList.add("radio__sound-regular--active"),n.classList.add("sound__wrapper--active"),1236<=window.innerWidth?(r.style.width="64%",e.style.width="15%"):e.style.width="25%")});var userAgent=navigator.userAgent.toLowerCase(),InternetExplorer=!1;(!/mozilla/.test(userAgent)||/firefox/.test(userAgent)||/chrome/.test(userAgent)||/safari/.test(userAgent)||/opera/.test(userAgent))&&!/msie/.test(userAgent)||(InternetExplorer=!0),InternetExplorer?document.querySelector(".radio__sound-regular").addEventListener("change",function(e){var t=100==e.target.value?1:e.target.value<=9?"0.0".concat(e.target.value):0===e.target.value?0:"0.".concat(e.target.value);document.getElementById("radio_player").volume=t}):document.querySelector(".radio__sound-regular").addEventListener("input",function(e){var t=100==e.target.value?1:e.target.value<=9?"0.0".concat(e.target.value):0===e.target.value?0:"0.".concat(e.target.value);document.getElementById("radio_player").volume=t});var footerDown=document.querySelector(".footer__down");window.outerWidth<=1100?footerDown.addEventListener("click",function(e){var t=footerDown.querySelector(".footer__down-mobile-container"),n=footerDown.querySelector(".footer__down-desc-container");e.target.closest(".radio__pause")||e.target.closest(".radio__play")||e.target.closest(".radio__sound")||(t.classList.contains("footer__down-mobile-container--active")?(t.classList.remove("footer__down-mobile-container--active"),n.classList.add("footer__down-desc-container--active")):(t.classList.add("footer__down-mobile-container--active"),n.classList.remove("footer__down-desc-container--active")))}):(footerDown.addEventListener("mousemove",function(){var e=footerDown.querySelector(".footer__down-mobile-container"),t=footerDown.querySelector(".footer__down-desc-container");e.classList.remove("footer__down-mobile-container--active"),t.classList.add("footer__down-desc-container--active")}),footerDown.addEventListener("mouseleave",function(){var e=footerDown.querySelector(".footer__down-mobile-container"),t=footerDown.querySelector(".footer__down-desc-container");e.classList.add("footer__down-mobile-container--active"),t.classList.remove("footer__down-desc-container--active")}))}catch(e){}function onloadCallback(){setTimeout(function(){console.log("работает"),document.querySelector("#capcha1")&&(oneCap=grecaptcha.render("capcha1",{sitekey:"6LcprRkbAAAAAEBQCjQ_te7OhFSjE22sqgGpafGz"})),document.querySelector("#capcha2")&&(twoCap=grecaptcha.render("capcha2",{sitekey:"6LcprRkbAAAAAEBQCjQ_te7OhFSjE22sqgGpafGz"}))},4e3)}function sendForm(e){$(e).on("submit",function(e){e.preventDefault(),$(this).children("#recaptchaError")&&$(this).children("#recaptchaError").text("");var t,n,a,r=!1;if(0!==$(this).children(".g-recaptcha").length&&(r=!0),!0===r){switch(console.log($(this).children(".g-recaptcha").attr("id")),$(this).children(".g-recaptcha").attr("id")){case"capcha2":t=grecaptcha.getResponse(twoCap);break;default:t=grecaptcha.getResponse()}t.length?$("#recaptchaError").text(""):$("#recaptchaError").text('* Вы не прошли проверку "Я не робот"')}checkInput($(this))&&(!1===r||t.length)&&(n=$(this).serializeArray(),a=$(this).attr("action"),$.post(myajax.url,{form:n,action:a},function(e){for(var t=0;t<$("form").length;t++)$("form")[t].reset();document.querySelector(".modal-active")&&document.querySelector(".modal-active").classList.remove("modal-active"),document.querySelector(".delete")&&document.querySelectorAll(".delete").forEach(function(e){e.remove()}),document.querySelector(".modal--send").classList.add("modal-active"),setTimeout(function(){document.querySelector(".modal-active")&&(document.querySelector(".modal-active").classList.remove("modal-active"),document.querySelector("body").style.overflow="")},4e3)}))})}document.addEventListener("DOMContentLoaded",function(){document.querySelectorAll(".rate__content-item").forEach(function(e){0===e.querySelectorAll(".rate__content-card").length&&e.remove()}),document.querySelectorAll(".rate__content").forEach(function(e){var t;e.querySelector(".rate__content-item")||(t=e.getAttribute("data-maincontent"),document.querySelector('[data-maintab="'.concat(t,'"]'))&&document.querySelector('[data-maintab="'.concat(t,'"]')).remove())}),document.querySelector(".rate--constructor")||document.querySelectorAll("[data-maintab]").forEach(function(e,t){var n;e.classList.remove("rate__catalog-link--active"),0===t&&(n=e.getAttribute("data-maintab"),document.querySelector('[data-maincontent="'.concat(n,'"]')).classList.add("rate__content--active"),e.classList.add("rate__catalog-link--active"))})}),window.addEventListener("resize",function(){977<=window.outerWidth&&(document.querySelector(".header-down-actiove-mobile")&&document.querySelector(".header-down-actiove-mobile").classList.remove("header-down-actiove-mobile"),document.querySelectorAll(".header-down__list-mobile")&&document.querySelectorAll(".header-down__list-mobile").forEach(function(e){e.classList.contains("header-down__list-mobile")&&e.classList.remove("header-down__list-mobile"),e.classList.contains("header-down__list-block")&&e.classList.remove("header-down__list-block"),e.classList.contains("header-down__list-fadeIn")&&e.classList.remove("header-down__list-fadeIn")}))}),console.log(window.location.href),-1!==window.location.href.indexOf("t-tk")&&((element=document.createElement("script")).src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit",element.classList.add("google-script"),element.async=!0,document.head.appendChild(element)),sendForm(".block-question__form"),sendForm(".modal__form--zayvka"),sendForm(".modal__form--contact"),sendForm(".white-form__form");try{document.addEventListener("DOMContentLoaded",function(){!function(r,e,t,n){var c=1<arguments.length&&void 0!==e?e:"",o=2<arguments.length&&void 0!==t?t:"",s=3<arguments.length&&void 0!==n?n:"",i=document.querySelectorAll(r),l=document.querySelectorAll("[".concat(c,"]"));i.forEach(function(e){e.addEventListener("click",function(e){var n=e.target;i.forEach(function(e,t){e.classList.remove(o),e===n&&e.classList.add(o)}),l.forEach(function(e,t){e.classList.remove(s)});var t=r.slice(1,-1),a=n.getAttribute(t);document.querySelector("[".concat(c,'="').concat(a,'"]')).classList.add(s)})})}("[data-mainTab]","data-mainContent","rate__catalog-link--active","rate__content--active")})}catch(e){}try{var tab,contents=document.querySelectorAll(".page [data-content]").forEach(function(e,t){e.classList.remove("page__content--active"),0===t&&e.classList.add("page__content--active")});window.outerWidth<=976&&(tab=document.querySelector(".page__right--tabs")).addEventListener("click",function(e){var t;e.target.closest(".page__right-item--active")&&(t=e.target.closest(".page__right-item--active")),t.classList.contains("page__right-item--active")&&(t.closest(".page__right-list--active")?(t.closest("ul").classList.remove("page__right-list--active"),t.closest(".page__right--tabs").classList.remove("page__right--tabs-active")):(t.closest(".page__right--tabs").classList.add("page__right--tabs-active"),t.closest("ul").classList.add("page__right-list--active")))});var btns=document.querySelectorAll(".page [data-tab]").forEach(function(a,e){a.classList.remove("page__right-item--active"),0===e&&a.classList.add("page__right-item--active"),a.addEventListener("click",function(e){var t=a.getAttribute("data-tab"),n=document.querySelector("[data-content='".concat(t,"']"));document.querySelectorAll(".page__right-item--active").forEach(function(e,t){e.classList.remove("page__right-item--active")}),document.querySelectorAll(".page__content--active").forEach(function(e,t){e.classList.remove("page__content--active")}),n.classList.add("page__content--active"),a.classList.add("page__right-item--active")})})}catch(e){}if($("#preloader")){var img_load=function(){loadedImg++,(100<=(progress+=percent)||loadedImg==imagesCount)&&(preloader.delay(200).fadeOut("slow"),clearInterval(time)),$(".dws-progress-bar").circularProgress("animate",progress,500)},preloader=$("#preloader"),imagesCount=$("img").length,percent=100/imagesCount,progress=0,loadedImg=0;document.querySelector("#preloader").style.display="block";var time=setInterval(function(){count++,document.querySelector("#preloader").style.backgroundPosition="-".concat(count,"px")},7);$(".dws-progress-bar").circularProgress({color:"#D22730",line_width:10,height:"110px",width:"110px",percent:0,counter_clockwise:!1,starting_position:200}).circularProgress("animate",percent,1e3);for(var i=0;i<imagesCount;i++){var img_copy=new Image;img_copy.src=document.images[i].src,img_copy.onload=img_load,img_copy.onerror=img_load}var count=0}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
